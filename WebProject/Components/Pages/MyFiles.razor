@page "/my-files"
@rendermode InteractiveServer
@using BlazorInputFile
@using WebProject.Utilities
@inject Services.HttpRequestService httpService



<BlazorInputFile.InputFile OnChange="HandleSelection" multiple="true" />
<br>

@if (EnableUpload && _files != null)
{
	<ul>
		@foreach (var file in _files)
		{
			<li>Размер @file.Name: @FuncUtilities.GetSizeString(file.Size)</li>
		}
	</ul>
	<button @onclick="UploadFile">Загрузить</button>
}

<p>Ваш файл: @FileId</p>

@code {
	const long maxFileSize = 250 * 1024 * 1024;
	private bool EnableUpload = false;

	IFileListEntry[]? _files { get; set; }
	UserToken? userToken { get; set; }

	string FileId { get; set; }

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			userToken = await httpService.GetOrCreateTokenAsync();
			//проверка на null
		}
	}
	private void HandleSelection(IFileListEntry[] files)
	{
		EnableUpload = true;
		_files = files;
	}

	private async Task UploadFile()
	{
		if (_files == null) return;

		foreach (var file in _files)
		{
			if (file == null)
				return;

			if (file.Data.Length > maxFileSize)
				return;

		}
		var response = await httpService.UploadFileAsync(_files, userToken);
		if(response.IsSuccessStatusCode)
		{
			FileId = await response.Content.ReadAsStringAsync();
		}
		_files = null;
		EnableUpload = false;
	}
}
